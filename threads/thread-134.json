[
    {
        "thread_id": 134,
        "name": "Red",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=525",
        "subject": "Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5708#msg5708",
        "date": "July 25, 2010, 05:08:03 PM",
        "content": "<div class=\"post\">I think there is a pretty significant crypto flaw in Bitcoin as currently implemented. I'm not sure it is exploitable now (I'm not a real cryptohacker) but it is more than plausible that will be in the near future.<br/><br/>The flaw would enable anonymous stealing of coins from arbitrary bitcoin addresses. And no it doesn't involve solving any of the hard problems that keep existing crypto systems secure. It is simply a *potential* correctable logic flaw in the implementation.<br/><br/>I would like bitcoins to succeed, so I'd rather not jump up and down in public yelling about flaws in public. Is there an appropriate place to discuss these types of issues?</div>",
        "post_num": 1,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "knightmb",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=345",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5709#msg5709",
        "date": "July 25, 2010, 05:19:29 PM",
        "content": "<div class=\"post\">It's open source software, better to discuss it now than try to keep it a secret for someone else to discover and they may not be willing to share any details.</div>",
        "post_num": 2,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "satoshi",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=3",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5712#msg5712",
        "date": "July 25, 2010, 05:45:22 PM",
        "content": "<div class=\"post\">It's best if you tell it to me privately so it can be fixed first.<br/><br/>I just e-mailed you my e-mail address.\u00a0 (or you could PM me here)</div>",
        "post_num": 3,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "Red",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=525",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5715#msg5715",
        "date": "July 25, 2010, 06:07:31 PM",
        "content": "<div class=\"post\">You stopped my post just in time! :-)</div>",
        "post_num": 4,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "Quantumplation",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=450",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5716#msg5716",
        "date": "July 25, 2010, 06:09:40 PM",
        "content": "<div class=\"post\">Once it's fixed or proven not to work, could you post the details here?\u00a0 I'm very curious. =)</div>",
        "post_num": 5,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "knightmb",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=345",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5719#msg5719",
        "date": "July 25, 2010, 06:15:05 PM",
        "content": "<div class=\"post\">I think I know what he means, but I was certain that the odds of doing it a bit too random to make an attack out of it.</div>",
        "post_num": 6,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "satoshi",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=3",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5724#msg5724",
        "date": "July 25, 2010, 07:06:23 PM",
        "content": "<div class=\"post\">Red, thanks for telling me privately first!\u00a0 Please go ahead and post it (and relieve the suspense for everyone!)<br/><br/>His point is that transactions paid to a Bitcoin Address are only as secure as the hash function.\u00a0 To make Bitcoin Addresses short, they are a hash of the public key, not the public key itself.\u00a0 An attacker would only have to break the hash function, not ECDSA.</div>",
        "post_num": 7,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "Red",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=525",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5725#msg5725",
        "date": "July 25, 2010, 07:09:43 PM",
        "content": "<div class=\"post\">Thanks Satoshi,<br/><br/>Here is what I sent him.<br/><br/>-----------<br/><br/><br/>Public key cryptography depends on the fact that it is hard to factor large prime numbers. Everyone knows that. If bitcoins were transfers were assigned to a well formed public key, and an associated private key signature was required for future transfer I would concede that bitcoins crypto transfers were completely secure.<br/><br/>However, bitcoin transactions don't seem to work that way (by my reading). Transactions assign coin amounts to a particular \"bitcoin address\". Where the address is a hash of the public key.<br/><br/>To validate a transaction, nodes take the public key from the signature and use that to verify the actual signature. If the signature is valid, it then hashes the public key to confirm it matches the bitcoin address assigned in the previous transaction. If both match, by definition, the transaction is good.<br/><br/><br/>The potential weakness is in associating the public key in the signature with the bitcoin address.<br/><br/>There is a many to one relationship between public keys and a given hash. Now, if finding a pair of prime numbers that creates a secure public/private key pair where the public key part hashes to a particular bitcoin address seems hard... it probably is.<br/><br/>However, that is not required.<br/><br/>All you need is ANYTHING representing a public key that hash collides with a know large bitcoin account. It does NOT have to be a secure key pair based on primes. It is simply has to work once and allow the transfer of the stolen money to another account. That is potentially much easier.<br/><br/>Some hashes are harder to collide than others. I'm not sure the strength of the hash being used. However, colliding any hash gets much easier if you don't have to care about the content being hashed.<br/><br/>Because of the nature of public keys they look like random data. As I understand them, you can't know if a public key is based upon secure math unless you succeed in factoring it. Therefore clients don't try. They normally just do the validation of the signature and presume the public key was generated in a secure fashion if it worked.<br/><br/>NOTE: The following analysis needs double checking by a real cryptohacker. IANACR<br/><br/>So depending on the hash, you could use one of the up-and-coming hash collision algorithms to generate a colliding block of data which represents a public key. Then by reversing the public/private key math, generate an associated (but hardly secure at all) private key that would generate valid signatures.<br/><br/>You then take your insecure, easily factorable, key pair and generate a signed transaction that matches the target bitcoin address.<br/><br/>Since the transaction log, can't validate the full public key the coins were intended for, it simple presumes it must have been the one presented.<br/><br/><br/>By recording the full public key of the transfer target in the block list you can regain the intended strength. However, you lose the ability to pass around 34 character addresses.<br/><br/><br/>If I'm off base, I apologize for wasting your time.<br/><br/>Cheers!<br/>Red<br/></div>",
        "post_num": 8,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "Red",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=525",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5728#msg5728",
        "date": "July 25, 2010, 07:22:14 PM",
        "content": "<div class=\"post\">Satoshi pointed out that my scenario still required the hash function to be broken. That is true, but I was surprised to learn how successful some have been with that. MD4 and MD5 are obvious examples. But work is well underway at colliding SHA-1 and siblings like SHA-256.<br/><br/>What hash is being used in this part of Bitcoin?<br/><br/>He is also skeptical that you could you could use something other than a generated keypair.<br/><br/>On this point, I'm pretty confident that it is a simple matter of mathematics. I didn't pay enough attention to this until I learned about \"blind signing\" of documents.<br/><br/>It turns out you can take a document and multiply it by a random number. Then have someone sign the jumbled file. Finally, you divide your random number out of their signature and the result is still a valid signature for the original document. Who'd figured that would work!<br/><br/>Anyway, if keypairs are only secure if they are based upon pairs of primes. Then nothing changes any of the math if the numbers are not prime. They are just much easier to factor.<br/><br/>I'd be perfectly happy for some crypto guy to prove me an idiot. It effects some features of a previous project I created that relied on the same association. I didn't think of this then either.</div>",
        "post_num": 9,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "knightmb",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=345",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5733#msg5733",
        "date": "July 25, 2010, 07:34:42 PM",
        "content": "<div class=\"post\">Very nice. *another reason why I love open source*<br/><br/>As I understand it then, and please correct me if I'm wrong<br/><br/>Since the hash of the public key is smaller than the actual public key itself, one need only find a collision that matches the hash and when that collision is found you'll know the public/private key combo. Then you simply spend coin using the known ones and the other clients will think it's a valid transfer because the clients are only concerned that your hash matches the hash of the victim and the transaction is recorded for all time.<br/><br/>Currently the hash is 35 characters long, alpha-numeric<br/>26 (upper case) +26 (lower case) +10 (numbers) = 62 possible per character<br/>So we have 541,638,008,296,341,754,635,824,011,376,225,346,986,572,413,939,634,062,667,808,768 possible combinations.<br/><br/>So I think we have about half of much work to do compared to going brute force against the main private/public key. Never hurts to plan for the future\u00a0 <img alt=\"Wink\" border=\"0\" src=\"https://bitcointalk.org/Smileys/default/wink.gif\"/></div>",
        "post_num": 10,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "knightmb",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=345",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5736#msg5736",
        "date": "July 25, 2010, 07:44:02 PM",
        "content": "<div class=\"post\"><div class=\"quoteheader\"><a href=\"https://bitcointalk.org/index.php?topic=571.msg5728#msg5728\">Quote from: Red on July 25, 2010, 07:22:14 PM</a></div><div class=\"quote\">Satoshi pointed out that my scenario still required the hash function to be broken. That is true, but I was surprised to learn how successful some have been with that. MD4 and MD5 are obvious examples. But work is well underway at colliding SHA-1 and siblings like SHA-256.<br/></div>What they often don't mention though is *collision generating* still takes a lot of CPU time.<br/><br/>If I figure out that Public Key 123456 generates Hash ABCD<br/>and<br/>Public Key 654321 also generates Hash ABCD<br/>I'm still left without the Private Key.<br/><br/>But from what you are saying, all I need is Public Key 654321 and I can spend coin pretending to be Public Key 123456.</div>",
        "post_num": 11,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "Red",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=525",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5737#msg5737",
        "date": "July 25, 2010, 07:52:23 PM",
        "content": "<div class=\"post\">From what I was told, bitcoin is using one of the 160 bit hashes for generating bitcoin address.<br/><br/>The SHA-1 family of hash algorithms are some of the most commonly used. SHA-1 is a 160 bit hash.<br/><br/>Here is a paper that claims to find SHA-1 collisions in 2^52 crypto operations. And optimally secure hash would take 2^80 operations. 2^52 time is still large, but it is getting into cluster and botnet range.<br/><br/><a href=\"http://www.ictlex.net/wp-content/iacrhash.pdf\">http://www.ictlex.net/wp-content/iacrhash.pdf</a><br/><br/>The MD5 hashes can already be crashed in seconds on laptops. That was why it was retired from certificate based signatures.<br/><br/>And yes what I'm saying is **I think** you can think of a public key as two secret numbers mathematically combined together. And the private key as those two numbers kept separately. The thing that make the system secure requires that the two secret numbers be really large prime numbers.<br/><br/>But if they are really large non-prime numbers the combination math still works, it is just must faster to break the algorithm.<br/><br/>I'll do a little more googling and see if I can substantiate my claims. I was hoping someone could dismiss them out of hand though.<br/><br/></div>",
        "post_num": 12,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "satoshi",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=3",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5740#msg5740",
        "date": "July 25, 2010, 08:01:40 PM",
        "content": "<div class=\"post\"><div class=\"quoteheader\"><a href=\"https://bitcointalk.org/index.php?topic=571.msg5736#msg5736\">Quote from: knightmb on July 25, 2010, 07:44:02 PM</a></div><div class=\"quote\">If I figure out that Public Key 123456 generates Hash ABCD<br/>and<br/>Public Key 654321 also generates Hash ABCD<br/><i>I'm still left without the Private Key.</i><br/><br/>But from what you are saying, all I need is Public Key 654321 and I can spend coin pretending to be Public Key 123456.<br/></div>You would still have to sign it with public key 654321. \u00a0You need to find a collision using a public key for which you know the private key.<br/><br/>When you claim a Bitcoin Address transaction, you give your public key that matches the hash, then you must sign it with that key.<br/><br/>Red's point is that it's easy to quickly generate insecure public keys which you could break and find the private key after you find a collision.<br/><br/>He points out that if the public key was required to be a secure one, one which must have required significant work to find the prime numbers, that would increase the strength above that of the hash function alone. \u00a0Someone trying to brute force would have to take time generating a key for each attempt.<br/></div>",
        "post_num": 13,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "knightmb",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=345",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5743#msg5743",
        "date": "July 25, 2010, 08:20:41 PM",
        "content": "<div class=\"post\"><div class=\"quoteheader\"><a href=\"https://bitcointalk.org/index.php?topic=571.msg5740#msg5740\">Quote from: satoshi on July 25, 2010, 08:01:40 PM</a></div><div class=\"quote\">You would still have to sign it with public key 654321. \u00a0You need to find a collision using a public key for which you know the private key.<br/><br/>When you claim a Bitcoin Address transaction, you give your public key that matches the hash, then you must sign it with that key.<br/><br/>Red's point is that it's easy to quickly generate insecure public keys which you could break and find the private key after you find a collision.<br/><br/>He points out that if the public key was required to be a secure one, one which must have required significant work to find the prime numbers, that would increase the strength above that of the hash function alone. \u00a0Someone trying to brute force would have to take time generating a key for each attempt.<br/><br/></div>Yeah, I thought the private key had to be in the mix somewhere. It kind of adds another randomness though, you have to find the hash that collides with another public key and at the same time, the private key has to be weak enough to break. I'm not saying it's impossible, but it introduces 2 variables into the reverse collision finding.<br/><br/>Basically, one would build a rainbow table of weak private keys and then have to compare those to public hashes and then have to hope that someone out there has a hash that happens to be a part of that attack. Not impossible of course, but how feasible even if computers were 100 times faster in 10 years?<br/><br/>[edit] ok, re-read what you wrote, the public key is generated from the private key, not independently. So just finding a weak public key is the issue.</div>",
        "post_num": 14,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "satoshi",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=3",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5754#msg5754",
        "date": "July 25, 2010, 08:48:01 PM",
        "content": "<div class=\"post\"><div class=\"quoteheader\">Quote</div><div class=\"quote\">Here is a paper that claims to find SHA-1 collisions in 2^52 crypto operations. And optimally secure hash would take 2^80 operations. 2^52 time is still large, but it is getting into cluster and botnet range.<br/></div>2^80 is if you can use a birthday attack. \u00a0You can't use a birthday attack for this, so the difficulty is the full 2^160 bits.\u00a0 Although, if you were trying to crack any one of 1 million (2^20) transactions, you could do a partial birthday attack 2^160/2^20 = 2^140.<br/><br/>Bitcoin Addresses are the only place where 160-bit hash is used. \u00a0Everything else is SHA-256. \u00a0They're calculated as:<br/><br/>bitcoinaddress = RIPEMD-160(SHA-256(publickey))<br/><br/>Correct me if I'm wrong (please, and I'll gladly eat crow) but I think it would be hard to use an analytical attack on RIPEMD-160 in this case. \u00a0An analytical attack prescribes a certain range or pattern of inputs to try that will greatly increase your chance of finding a collision. \u00a0Here, you don't have that kind of control over RIPEMD-160's input, because the input is the output of SHA-256. \u00a0If an analytical attack helps you find an input to RIPEMD-160 that produces a collision, what are you going to do with it? \u00a0You still have to get SHA-256 to output that value, so you would still have to break SHA-256 too.<br/><br/>For brute force, RIPEMD-160(SHA-256(x)) is no stronger than RIPEMD-160 alone. \u00a0But for analytical attack, it seems like you must analytical attack both RIPEMD-160 and SHA-256. \u00a0If I'm wrong, then the strength is the same as RIPEMD-160 and the SHA-256 only serves as one round of key strengthening.</div>",
        "post_num": 15,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "Red",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=525",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5757#msg5757",
        "date": "July 25, 2010, 09:04:01 PM",
        "content": "<div class=\"post\"><div class=\"quoteheader\"><a href=\"https://bitcointalk.org/index.php?topic=571.msg5754#msg5754\">Quote from: satoshi on July 25, 2010, 08:48:01 PM</a></div><div class=\"quote\">bitcoinaddress = RIPEMD-160(SHA-256(publickey))<br/><br/>Correct me if I'm wrong (please, and I'll gladly eat crow) but I think it would be hard to use an analytical attack on RIPEMD-160 in this case.<br/></div><br/>I think you are correct on the analytical attack. At least a far as I understand (minimally) the mathematical genius that is analyzing them.<br/><br/>I was worried it was the simpler:<br/><br/>bitcoinaddress = RIPEMD-160(publickey)<br/><br/><br/></div>",
        "post_num": 16,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "Red",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=525",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5764#msg5764",
        "date": "July 25, 2010, 09:19:11 PM",
        "content": "<div class=\"post\">So the way I read it.<br/><br/>Given two numbers p and q. Which for RSA are supposed to be large primes.<br/><br/>Then n = p*q<br/><br/>The public key is the two fields (n, e).\u00a0 e is called the public exponent and appears to be chosen from a set of common values.<br/>The private key is also two fields (n, d). d is called the private exponent it it is derived by knowing\u00a0 e, p-1, and q-1.<br/><br/>The trick is, it is really hard to factor n into p &amp; q. Therefore it is equally as hard to find p-1 and q-1<br/><br/><br/>My postulation is that if n is arbitrary, and e is one of the common values, then there are lots of different p, q pairs that would work. The less prime the numbers the easier to find p and q, and therefore p-1 and q-1. And if you have a big block of arbitrary data that give you lots of flexibility in trying to collide a hash.<br/><br/>(That is the point where I could be totally off base though. Really interested, if a crypto geek knows better than me.)<br/><br/>I did read that the key generation algorithms create p and q such that they are \"very likely prime\" but it is too much work to know for sure. This leads me to believe non-primes don't cause any obvious FAILs. I could be wrong though.</div>",
        "post_num": 17,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 134,
        "name": "satoshi",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=3",
        "subject": "Re: Stealing Coins",
        "url": "https://bitcointalk.org/index.php?topic=571.msg5778#msg5778",
        "date": "July 25, 2010, 10:27:36 PM",
        "content": "<div class=\"post\">Sorry, actually it's ECDSA (Elliptic Curve Digital Signature Algorithm) not RSA.\u00a0 I shouldn't have said \"prime numbers\".\u00a0 ECDSA doesn't take much time to generate a keypair.</div>",
        "post_num": 18,
        "is_displayed": true,
        "nested_level": 0
    }
]