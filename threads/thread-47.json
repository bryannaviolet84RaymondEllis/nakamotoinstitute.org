[
    {
        "thread_id": 47,
        "name": "Minsc",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=147",
        "subject": "Is there a way to automate bitcoin payments for a website?",
        "url": "https://bitcointalk.org/index.php?topic=112.msg928#msg928",
        "date": "April 15, 2010, 12:12:40 AM",
        "content": "<div class=\"post\">I run a website hosted on freebsd and well right now nobody visits it ever and so I can totally change it.\u00a0 I am wanting to change it to allow people to pay for services from the website exclusively through bitcoins.\u00a0 Now I see bitcoin has some linux program but I'm not sure that's compatible with FreeBSD or not.\u00a0 I also don't know how I can integrate bitcoin into a website to automatically take the bitcoin payments so they show up immediately.\u00a0 I'd really like them to work so my website immediately recognizes the payment coming in.</div>",
        "post_num": 1,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 47,
        "name": "dwdollar",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=24",
        "subject": "Re: Is there a way to automate bitcoin payments for a website?",
        "url": "https://bitcointalk.org/index.php?topic=112.msg929#msg929",
        "date": "April 15, 2010, 12:16:22 AM",
        "content": "<div class=\"post\">Not sure about FreeBSD, but payments can be automated with the new version. \u00a0<a href=\"http://bitcointalk.org/index.php?topic=63.0\">http://bitcointalk.org/index.php?topic=63.0</a></div>",
        "post_num": 2,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 47,
        "name": "The Madhatter",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=14",
        "subject": "Re: Is there a way to automate bitcoin payments for a website?",
        "url": "https://bitcointalk.org/index.php?topic=112.msg931#msg931",
        "date": "April 15, 2010, 12:49:20 AM",
        "content": "<div class=\"post\">I have the latest SVN snapshot running on FreeBSD (bitcoind) with automation running on a few servers.<br/><br/>You just install databases/db48, x11-toolkits/gtk20, devel/gmake, and devel/boost-all from the ports tree, download wxwidgets 2.9 and install it manually (the port version is 2.8.. that's no good), change a few paths in the makefile.unix file, and run \"gmake -f makefile.unix bitcoind\". You will end up with a binary called \"bitcoind\" (it is headless). Run \"strip ./bitcoind\" to make it smaller (it is really big with the debugging symbols). You can, of course, leave the debugging symbols in. I had to use gdb on bitcoind a few times in the past to figure out a strange crash.<br/><br/>I have tested bitcoind on 32 and 64 bit systems running FreeBSD. I didn't detect any memory leaks or see any crashes.<br/></div>",
        "post_num": 3,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 47,
        "name": "generica",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=154",
        "subject": "Re: Is there a way to automate bitcoin payments for a website?",
        "url": "https://bitcointalk.org/index.php?topic=112.msg984#msg984",
        "date": "April 21, 2010, 04:53:40 PM",
        "content": "<div class=\"post\">madhatter, thanks for these instructions.\u00a0 I edited the makefile and installed the dependencies.\u00a0 Here are the changes I had to make if anyone is interested:<br/><br/>- Added these three INCLUDEPATH entries:<br/>\u00a0-I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" \\<br/>\u00a0-I\"/usr/local/include/db48\" \\<br/>\u00a0-I\"/usr/local/include\"<br/><br/>- Added this LIBPATH entry:<br/>\u00a0-L\"/usr/local/lib/db48\"<br/><br/>- Changed \"wx_gtk2ud-2.9\" to \"wx_gtk2u-2.9\" because I didn't build wxwidgets with debugging<br/><br/>This is with SVN Rev 75.\u00a0 However, the end result won't compile:<br/><br/><div class=\"codeheader\">Code:</div><div class=\"code\">[root@colo /usr/src/bitcoin/trunk]# gmake -f makefile.unix bitcoind<br/>g++ -c -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -DwxUSE_GUI=0 -o obj/nogui/util.o util.cpp<br/>g++ -c -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -DwxUSE_GUI=0 -o obj/nogui/script.o script.cpp<br/>g++ -c -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -DwxUSE_GUI=0 -o obj/nogui/db.o db.cpp<br/>g++ -c -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -DwxUSE_GUI=0 -o obj/nogui/net.o net.cpp<br/>g++ -c -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -DwxUSE_GUI=0 -o obj/nogui/irc.o irc.cpp<br/>g++ -c -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -DwxUSE_GUI=0 -o obj/nogui/main.o main.cpp<br/>g++ -c -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -DwxUSE_GUI=0 -o obj/nogui/rpc.o rpc.cpp<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/less.hpp: In instantiation of 'boost::mpl::less_impl&lt;mpl_::integral_c_tag, mpl_::integral_c_tag&gt;::apply&lt;mpl_::size_t&lt;8ul&gt;, mpl_::size_t&lt;1ul&gt; &gt;':<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/less.hpp:73:\u00a0 \u00a0instantiated from 'boost::mpl::less&lt;mpl_::size_t&lt;8ul&gt;, mpl_::size_t&lt;1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/has_type.hpp:20:\u00a0 \u00a0instantiated from 'boost::mpl::aux::has_type&lt;boost::mpl::less&lt;mpl_::size_t&lt;8ul&gt;, mpl_::size_t&lt;1ul&gt; &gt;, mpl_::bool_&lt;true&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/quote.hpp:56:\u00a0 \u00a0instantiated from 'boost::mpl::quote2&lt;boost::mpl::less, mpl_::void_&gt;::apply&lt;mpl_::size_t&lt;8ul&gt;, mpl_::size_t&lt;1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:49:\u00a0 \u00a0instantiated from 'boost::mpl::apply_wrap2&lt;boost::mpl::quote2&lt;boost::mpl::less, mpl_::void_&gt;, mpl_::size_t&lt;8ul&gt;, mpl_::size_t&lt;1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/bind.hpp:207:\u00a0 \u00a0instantiated from 'boost::mpl::bind2&lt;boost::mpl::quote2&lt;boost::mpl::less, mpl_::void_&gt;, mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt;::apply&lt;mpl_::size_t&lt;8ul&gt;, mpl_::size_t&lt;1ul&gt;, mpl_::na, mpl_::na, mpl_::na&gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:49:\u00a0 \u00a0instantiated from 'boost::mpl::apply_wrap2&lt;boost::mpl::protect&lt;boost::mpl::bind2&lt;boost::mpl::quote2&lt;boost::mpl::less, mpl_::void_&gt;, mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt;, 0&gt;, mpl_::size_t&lt;8ul&gt;, mpl_::size_t&lt;1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply.hpp:73:\u00a0 \u00a0instantiated from 'boost::mpl::apply2&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt;, mpl_::size_t&lt;8ul&gt;, mpl_::size_t&lt;1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/max_element.hpp:42:\u00a0 \u00a0instantiated from 'boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;::apply&lt;boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:49:\u00a0 \u00a0instantiated from 'boost::mpl::apply_wrap2&lt;boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply.hpp:73:\u00a0 \u00a0instantiated from 'boost::mpl::apply2&lt;boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp:115:\u00a0 \u00a0instantiated from 'boost::mpl::aux::iter_fold_impl&lt;4, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_end&gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp:146:\u00a0 \u00a0instantiated from 'boost::mpl::aux::iter_fold_impl&lt;6, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_end&gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt; &gt;'<br/>/usr/local/include/boost/mpl/iter_fold.hpp:40:\u00a0 \u00a0instantiated from 'boost::mpl::iter_fold&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt; &gt;'<br/>/usr/local/include/boost/mpl/max_element.hpp:65:\u00a0 \u00a0instantiated from 'boost::mpl::max_element&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, mpl_::size_t&lt;1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, mpl_::size_t&lt;8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;'<br/>/usr/local/include/boost/variant/variant.hpp:123:\u00a0 \u00a0instantiated from 'boost::detail::variant::max_value&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, bool, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, long int, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, double, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::sizeof_&lt;mpl_::arg&lt;1&gt; &gt; &gt;'<br/>/usr/local/include/boost/variant/variant.hpp:232:\u00a0 \u00a0instantiated from 'boost::detail::variant::make_storage&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, bool, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, long int, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, double, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt;, boost::variant&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, bool, long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_&gt;::has_fallback_type_&gt;'<br/>/usr/local/include/boost/variant/variant.hpp:1098:\u00a0 \u00a0instantiated from 'boost::variant&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, bool, long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_&gt;'<br/>json/json_spirit_value.h:89:\u00a0 \u00a0instantiated from 'json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;'<br/>rpc.cpp:34:\u00a0 \u00a0instantiated from here<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/less.hpp:90: warning: comparison between 'enum mpl_::size_t&lt;1ul&gt;::&lt;anonymous&gt;' and 'enum mpl_::size_t&lt;8ul&gt;::&lt;anonymous&gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/less.hpp: In instantiation of 'boost::mpl::less_impl&lt;mpl_::integral_c_tag, mpl_::integral_c_tag&gt;::apply&lt;boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt; &gt;':<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/less.hpp:73:\u00a0 \u00a0instantiated from 'boost::mpl::less&lt;boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/has_type.hpp:20:\u00a0 \u00a0instantiated from 'boost::mpl::aux::has_type&lt;boost::mpl::less&lt;boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt; &gt;, mpl_::bool_&lt;true&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/quote.hpp:56:\u00a0 \u00a0instantiated from 'boost::mpl::quote2&lt;boost::mpl::less, mpl_::void_&gt;::apply&lt;boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:49:\u00a0 \u00a0instantiated from 'boost::mpl::apply_wrap2&lt;boost::mpl::quote2&lt;boost::mpl::less, mpl_::void_&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/bind.hpp:207:\u00a0 \u00a0instantiated from 'boost::mpl::bind2&lt;boost::mpl::quote2&lt;boost::mpl::less, mpl_::void_&gt;, mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt;::apply&lt;boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, mpl_::na, mpl_::na, mpl_::na&gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:49:\u00a0 \u00a0instantiated from 'boost::mpl::apply_wrap2&lt;boost::mpl::protect&lt;boost::mpl::bind2&lt;boost::mpl::quote2&lt;boost::mpl::less, mpl_::void_&gt;, mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt;, 0&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply.hpp:73:\u00a0 \u00a0instantiated from 'boost::mpl::apply2&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt; &gt;'<br/>/usr/local/include/boost/mpl/max_element.hpp:42:\u00a0 \u00a0instantiated from 'boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;::apply&lt;boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:49:\u00a0 \u00a0instantiated from 'boost::mpl::apply_wrap2&lt;boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply.hpp:73:\u00a0 \u00a0instantiated from 'boost::mpl::apply2&lt;boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp:115:\u00a0 \u00a0instantiated from 'boost::mpl::aux::iter_fold_impl&lt;4, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_end&gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt; &gt;'<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp:146:\u00a0 \u00a0instantiated from 'boost::mpl::aux::iter_fold_impl&lt;6, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_end&gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt; &gt;'<br/>/usr/local/include/boost/mpl/iter_fold.hpp:40:\u00a0 \u00a0instantiated from 'boost::mpl::iter_fold&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::protect&lt;boost::mpl::aux::select_max&lt;boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;, 0&gt; &gt;'<br/>/usr/local/include/boost/mpl/max_element.hpp:65:\u00a0 \u00a0instantiated from 'boost::mpl::max_element&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, boost::integral_constant&lt;long unsigned int, 1ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, boost::integral_constant&lt;long unsigned int, 8ul&gt;, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::less&lt;mpl_::arg&lt;-0x00000000000000001&gt;, mpl_::arg&lt;-0x00000000000000001&gt; &gt; &gt;'<br/>/usr/local/include/boost/variant/variant.hpp:123:\u00a0 \u00a0instantiated from 'boost::detail::variant::max_value&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, bool, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, long int, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, double, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt;, boost::alignment_of&lt;mpl_::arg&lt;1&gt; &gt; &gt;'<br/>/usr/local/include/boost/variant/variant.hpp:238:\u00a0 \u00a0instantiated from 'boost::detail::variant::make_storage&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, bool, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, long int, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, double, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt;, boost::variant&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, bool, long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_&gt;::has_fallback_type_&gt;'<br/>/usr/local/include/boost/variant/variant.hpp:1098:\u00a0 \u00a0instantiated from 'boost::variant&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Pair_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::recursive_wrapper&lt;std::vector&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, bool, long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_&gt;'<br/>json/json_spirit_value.h:89:\u00a0 \u00a0instantiated from 'json_spirit::Value_impl&lt;json_spirit::Config_vector&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;'<br/>rpc.cpp:34:\u00a0 \u00a0instantiated from here<br/>/usr/local/include/boost/mpl/aux_/preprocessed/gcc/less.hpp:90: warning: comparison between 'enum mpl_::integral_c&lt;long unsigned int, 1ul&gt;::&lt;anonymous&gt;' and 'enum mpl_::integral_c&lt;long unsigned int, 8ul&gt;::&lt;anonymous&gt;'<br/>g++ -c -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -DwxUSE_GUI=0 -o obj/nogui/init.o init.cpp<br/>g++ -c -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -O3 -o obj/sha.o sha.cpp<br/>g++ -O0 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -D__WXGTK__ -DNOPCH -I\"/usr/include\" -I\"/usr/local/include/wx-2.9\" -I\"/usr/local/lib/wx/include/gtk2-unicode-release-2.9\" -I\"/usr/local/include/db48\" -I\"/usr/local/include\"\u00a0 -o bitcoind -L\"/usr/lib\" -L\"/usr/local/lib\" -L\"/usr/local/lib/db48\" obj/nogui/util.o obj/nogui/script.o obj/nogui/db.o obj/nogui/net.o obj/nogui/irc.o obj/nogui/main.o obj/nogui/rpc.o obj/nogui/init.o obj/sha.o -l wx_baseu-2.9 -Wl,-Bstatic -l boost_system -l boost_filesystem -l db_cxx -Wl,-Bdynamic -l crypto -l gthread-2.0<br/>obj/nogui/init.o(.gnu.linkonce.t._ZNK13wxArrayString4ItemEm+0x13): In function `wxArrayString::Item(unsigned long) const':<br/>/usr/local/include/wx-2.9/wx/buffer.h:42: undefined reference to `wxTheAssertHandler'<br/>obj/nogui/init.o(.gnu.linkonce.t._ZNK13wxArrayString4ItemEm+0x45): In function `wxArrayString::Item(unsigned long) const':<br/>/usr/src/bitcoin/trunk/uint256.h:526: undefined reference to `wxOnAssert(char const*, int, char const*, char const*, wchar_t const*)'<br/>gmake: *** [bitcoind] Error 1<br/></div><br/>This is on FreeBSD 7.2.\u00a0 Any ideas? <img alt=\"Smiley\" border=\"0\" src=\"https://bitcointalk.org/Smileys/default/smiley.gif\"/><br/><br/></div>",
        "post_num": 4,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 47,
        "name": "Minsc",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=147",
        "subject": "Re: Is there a way to automate bitcoin payments for a website?",
        "url": "https://bitcointalk.org/index.php?topic=112.msg990#msg990",
        "date": "April 21, 2010, 11:04:52 PM",
        "content": "<div class=\"post\">I don't even understand what madhatter2 said.<br/><br/>It'd be nice to have just one single port to install and then I could just leave it as a terminate and stay resident program. \u00a0Then it would log payments received in a file and could be communicated with via shell commands.</div>",
        "post_num": 5,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 47,
        "name": "Link2VoIP",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=132",
        "subject": "Re: Is there a way to automate bitcoin payments for a website?",
        "url": "https://bitcointalk.org/index.php?topic=112.msg994#msg994",
        "date": "April 22, 2010, 12:31:46 AM",
        "content": "<div class=\"post\">You are partly correct. bitcoind is a \"terminate and stay resident program\". You communicate with it over a JSON-RPC socket to send payments/poll for received payments. <img alt=\"Wink\" border=\"0\" src=\"https://bitcointalk.org/Smileys/default/wink.gif\"/></div>",
        "post_num": 6,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 47,
        "name": "satoshi",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=3",
        "subject": "Re: Is there a way to automate bitcoin payments for a website?",
        "url": "https://bitcointalk.org/index.php?topic=112.msg1143#msg1143",
        "date": "May 18, 2010, 02:58:11 AM",
        "content": "<div class=\"post\">A little late, but in case anyone else has the same issue.\u00a0 The compile dump had 2 warnings (that were 20 lines long) and 2 link errors.\u00a0 The errors were:<br/><div class=\"quoteheader\">Quote</div><div class=\"quote\">obj/nogui/init.o(.gnu.linkonce.t._ZNK13wxArrayString4ItemEm+0x13): In function `wxArrayString::Item(unsigned long) const':<br/>/usr/local/include/wx-2.9/wx/buffer.h:42: undefined reference to `wxTheAssertHandler'<br/><br/>obj/nogui/init.o(.gnu.linkonce.t._ZNK13wxArrayString4ItemEm+0x45): In function `wxArrayString::Item(unsigned long) const':<br/>/usr/src/bitcoin/trunk/uint256.h:526: undefined reference to `wxOnAssert(char const*, int, char const*, char const*, wchar_t const*)'<br/></div><br/>Those are probably due to switching to the release build of wxWidgets instead of debug.\u00a0 They're moving towards only debug build and ditching the release build, so they probably don't care that their release build is broken by referring to non-existent assert stuff.\u00a0 There's nothing to fear about the debug build.\u00a0 It's fully suitable for releases.<br/><br/>bitcoind runs as a daemon and can either be controlled by command line or JSON-RPC.<br/><br/>Thanks madhatter and generica for detailing the instructions for building on freebsd.</div>",
        "post_num": 7,
        "is_displayed": true,
        "nested_level": 0
    }
]