[
    {
        "thread_id": 215,
        "name": "satoshi",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=3",
        "subject": "Auto-detect for 128-bit 4-way SSE2",
        "url": "https://bitcointalk.org/index.php?topic=1007.msg12262#msg12262",
        "date": "September 09, 2010, 01:04:05 AM",
        "content": "<div class=\"post\">SVN rev 150 has some code to try to auto-detect whether to use 4-way SSE2. \u00a0We need this because it's only faster on certain newer CPUs that have 128-bit SSE2 and not ones with 64-bit SSE2.<br/><br/>It uses the CPUID instruction to get the CPU brand, family, model number and stepping. \u00a0That's the easy part. \u00a0Knowing what to do with the model number is the hard part. \u00a0I was not able to find any table of family, model and stepping numbers for CPUs. \u00a0I had to go by various random reports I saw.<br/><br/>Here's what I ended up with:<br/><div class=\"codeheader\">Code:</div><div class=\"code\"> \u00a0// We need Intel Nehalem or AMD K10 or better for 128bit SSE2<br/>\u00a0\u00a0// Nehalem = i3/i5/i7 and some Xeon<br/>\u00a0\u00a0// K10 = Opterons with 4 or more cores, Phenom, Phenom II, Athlon II<br/>\u00a0\u00a0// \u00a0Intel Core i5 \u00a0family 6, model 26 or 30<br/>\u00a0\u00a0// \u00a0Intel Core i7 \u00a0family 6, model 26 or 30<br/>\u00a0\u00a0// \u00a0Intel Core i3 \u00a0family 6, model 37<br/>\u00a0\u00a0// \u00a0AMD Phenom \u00a0 \u00a0family 16, model 10<br/>\u00a0\u00a0bool fUseSSE2 = ((fIntel &amp;&amp; nFamily * 10000 + nModel &gt;= \u00a060026) ||<br/>\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (fAMD \u00a0 &amp;&amp; nFamily * 10000 + nModel &gt;= 160010));<br/></div><br/>I saw some sporadic inconsistent model numbers for AMD CPUs, so I'm not sure if this will catch all capable AMDs.<br/><br/>If it's wrong, you can still override it with -4way or -4way=0.<br/><br/>It prints what it finds in debug.log. \u00a0Search on CPUID.<br/><br/>This is only enabled if built with GCC.</div>",
        "post_num": 1,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 215,
        "name": "tcatm",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=592",
        "subject": "Re: Auto-detect for 128-bit 4-way SSE2",
        "url": "https://bitcointalk.org/index.php?topic=1007.msg12316#msg12316",
        "date": "September 09, 2010, 03:02:27 PM",
        "content": "<div class=\"post\">You should benchmark all implementations (using cpu time, not realtime) and choose the fastest and while benchmarking check whether the algorithm actually works.</div>",
        "post_num": 2,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 215,
        "name": "nelisky",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=601",
        "subject": "Re: Auto-detect for 128-bit 4-way SSE2",
        "url": "https://bitcointalk.org/index.php?topic=1007.msg12321#msg12321",
        "date": "September 09, 2010, 03:39:08 PM",
        "content": "<div class=\"post\"><div class=\"quoteheader\"><a href=\"https://bitcointalk.org/index.php?topic=1007.msg12316#msg12316\">Quote from: tcatm on September 09, 2010, 03:02:27 PM</a></div><div class=\"quote\">You should benchmark all implementations (using cpu time, not realtime) and choose the fastest and while benchmarking check whether the algorithm actually works.<br/></div><br/>Yeah, while implementing the cuda hasher I thought about this. There should be an interface to the hashing handler (or even a full miner per implementation) and we should have a simple way of giving it a known block, ask it to hash 1000 nonces and compare the result, while benchmarking at the same time. Shouldn't be too hard to implement and would help when developing new algorithms.<br/><br/>The interface schema would also help if we were to plug in an fpga based engine or something of the kind, having specific entry points into the code without having to tweak on the default mining schema.</div>",
        "post_num": 3,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 215,
        "name": "jgarzik",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=541",
        "subject": "Re: Auto-detect for 128-bit 4-way SSE2",
        "url": "https://bitcointalk.org/index.php?topic=1007.msg12322#msg12322",
        "date": "September 09, 2010, 04:07:20 PM",
        "content": "<div class=\"post\"><div class=\"quoteheader\"><a href=\"https://bitcointalk.org/index.php?topic=1007.msg12316#msg12316\">Quote from: tcatm on September 09, 2010, 03:02:27 PM</a></div><div class=\"quote\">You should benchmark all implementations (using cpu time, not realtime) and choose the fastest and while benchmarking check whether the algorithm actually works.<br/></div><br/>+1 agreed.\u00a0 It's not difficult or time-consuming for each user to do this at startup.<br/><br/></div>",
        "post_num": 4,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 215,
        "name": "teknohog",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=575",
        "subject": "Re: Auto-detect for 128-bit 4-way SSE2",
        "url": "https://bitcointalk.org/index.php?topic=1007.msg12336#msg12336",
        "date": "September 09, 2010, 07:32:05 PM",
        "content": "<div class=\"post\">Since the function CallCPUID function contains x86 assembler, it breaks the build on other architectures. I've changed line 2770 in main.cpp to<br/><br/>#if defined(__GNUC__) &amp;&amp; defined(CRYPTOPP_X86_ASM_AVAILABLE)<br/><br/>to make it compile again, at least on ARM.</div>",
        "post_num": 5,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 215,
        "name": "lfm",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=466",
        "subject": "Re: Auto-detect for 128-bit 4-way SSE2",
        "url": "https://bitcointalk.org/index.php?topic=1007.msg12349#msg12349",
        "date": "September 10, 2010, 02:47:31 AM",
        "content": "<div class=\"post\">I wonder if we could get the VIA C7 code included with an autodetect in the standard clients? Or is this just too rare a beast to trouble the main code over? The C7 does work with the standard clients with regular pentium or sse2 code albeit slower.<br/><br/></div>",
        "post_num": 6,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 215,
        "name": "nimnul",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=600",
        "subject": "Re: Auto-detect for 128-bit 4-way SSE2",
        "url": "https://bitcointalk.org/index.php?topic=1007.msg12361#msg12361",
        "date": "September 10, 2010, 12:34:11 PM",
        "content": "<div class=\"post\">&gt; There should be an interface to the hashing handler (or even a full miner per implementation) <br/><br/>+1. In case someone wants FPGA/whatever specific accelerator he has.</div>",
        "post_num": 7,
        "is_displayed": true,
        "nested_level": 0
    },
    {
        "thread_id": 215,
        "name": "satoshi",
        "poster_url": "https://bitcointalk.org/index.php?action=profile;u=3",
        "subject": "Re: Auto-detect for 128-bit 4-way SSE2",
        "url": "https://bitcointalk.org/index.php?topic=1007.msg12372#msg12372",
        "date": "September 10, 2010, 06:11:06 PM",
        "content": "<div class=\"post\"><div class=\"quoteheader\"><a href=\"https://bitcointalk.org/index.php?topic=1007.msg12336#msg12336\">Quote from: teknohog on September 09, 2010, 07:32:05 PM</a></div><div class=\"quote\">Since the function CallCPUID function contains x86 assembler, it breaks the build on other architectures. I've changed line 2770 in main.cpp to<br/><br/>#if defined(__GNUC__) &amp;&amp; defined(CRYPTOPP_X86_ASM_AVAILABLE)<br/><br/>to make it compile again, at least on ARM.<br/></div>Added in SVN rev 152</div>",
        "post_num": 8,
        "is_displayed": true,
        "nested_level": 0
    }
]